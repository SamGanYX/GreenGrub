name: CI with Maven and Frontend Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      security-events: write
      id-token: write

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: GreenGrub
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: maven

      - name: Build with Maven
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: mvn -B package --file backend/pom.xml

      - name: Run tests
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: mvn -f backend/pom.xml test

      - name: Run specific test
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: mvn -f backend/pom.xml test -Dtest=FullstackBackendApplicationTests

      # Add frontend test steps for Expo
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"

      - name: Install frontend dependencies
        run: npm ci

      - name: Install jest-expo latest version and required dependencies
        run: npm install -D jest-expo@latest react-native-mock-render jest-environment-jsdom

      - name: Create Jest setup and config files
        run: |
          # Create Jest setup file
          echo "global.FormData = class FormData {};" > jest.setup.js
          echo "jest.mock('react-native', () => require('react-native-mock-render'));" >> jest.setup.js

          # Create Jest config file
          cat > jest.config.js << 'EOL'
          module.exports = {
            preset: 'jest-expo',
            transformIgnorePatterns: [
              'node_modules/(?!((jest-)?react-native|@react-native(-community)?)|expo(nent)?|@expo(nent)?/.*|@expo-google-fonts/.*|react-navigation|@react-navigation/.*|@unimodules/.*|unimodules|sentry-expo|native-base|react-native-svg)'
            ],
            collectCoverage: true,
            collectCoverageFrom: [
              '**/*.{js,jsx}',
              '!**/coverage/**',
              '!**/node_modules/**',
              '!**/babel.config.js',
              '!**/jest.setup.js'
            ],
            setupFiles: [
              './jest.setup.js'
            ]
          };
          EOL

      - name: Run frontend tests with Expo setup
        env:
          NODE_OPTIONS: --experimental-vm-modules
        run: npx jest --watchAll=false

      - name: Generate dependency graph manually
        continue-on-error: true
        run: |
          cd backend
          mvn com.github.ferstl:depgraph-maven-plugin:4.0.2:aggregate -DgraphFormat=json -DoutputFileName=dependency-graph.json
