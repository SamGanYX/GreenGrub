name: Java CI with Maven
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    # Required permissions for the dependency graph submission
    permissions:
      contents: write
      security-events: write
      id-token: write
    services:
      # MySQL service container for testing
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: GreenGrub
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -ppassword"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    
    # Wait for MySQL to be ready
    - name: Verify MySQL connection
      run: |
        sudo apt-get install -y mysql-client
        mysql --host=127.0.0.1 --port=3306 -uroot -ppassword -e "SHOW DATABASES;"
    
    # Skip tests during package to avoid running them twice
    - name: Build with Maven
      run: mvn -B package --file backend/pom.xml -DskipTests
    
    # Run tests with MySQL configuration passed as system properties
    - name: Run tests
      run: |
        mvn -f backend/pom.xml test \
        -Dspring.datasource.url=jdbc:mysql://localhost:3306/GreenGrub \
        -Dspring.datasource.username=root \
        -Dspring.datasource.password=password \
        -Dspring.jpa.hibernate.ddl-auto=update
    
    # Generate dependency graph
    - name: Generate dependency graph
      continue-on-error: true
      run: |
        cd backend
        mvn com.github.ferstl:depgraph-maven-plugin:4.0.2:aggregate -DgraphFormat=json -DoutputFileName=dependency-graph.json
